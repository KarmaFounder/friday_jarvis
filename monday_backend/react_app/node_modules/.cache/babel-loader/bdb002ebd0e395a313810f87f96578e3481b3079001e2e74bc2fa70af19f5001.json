{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import'./App.css';import SoundWave from'./components/SoundWave';import{useSpeechRecognition}from'./hooks/useSpeechRecognition';import{useSpeechSynthesis}from'./hooks/useSpeechSynthesis';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[status,setStatus]=useState('idle');const[statusText,setStatusText]=useState('Listening...');const{speak,isSpeaking}=useSpeechSynthesis();const{startListening,stopListening,isListening}=useSpeechRecognition({onResult:handleSpeechResult,onInterim:handleInterimResult});const[isProcessing,setIsProcessing]=useState(false);// Determine the current state for visual feedback\nconst currentState=isProcessing?'thinking':isSpeaking?'speaking':isListening?'listening':'idle';useEffect(()=>{setStatus(currentState);switch(currentState){case'idle':setStatusText('Listening...');break;case'listening':setStatusText('Listening...');break;case'thinking':setStatusText('Friday is thinking...');break;case'speaking':setStatusText('Friday is speaking...');break;default:setStatusText('Ready');}},[currentState]);function handleInterimResult(transcript){if(!isProcessing&&!isSpeaking){setStatusText(\"Listening: \".concat(transcript));}}async function handleSpeechResult(transcript){if(isProcessing||isSpeaking)return;setIsProcessing(true);stopListening();setStatusText(\"Heard: \".concat(transcript));try{console.log('Sending to Friday:',transcript);const response=await fetch('/api/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:transcript})});const data=await response.json();if(response.ok){await speak(data.response);}else{throw new Error(data.error||'Failed to get response');}}catch(error){console.error('Error communicating with Friday:',error);await speak('Apologies, Sir, but I encountered a technical difficulty.');}finally{setIsProcessing(false);// Restart listening after a brief delay\nsetTimeout(()=>{startListening();},1000);}}// Start listening on component mount\nuseEffect(()=>{const initializeVoice=async()=>{try{// Request microphone permission\nawait navigator.mediaDevices.getUserMedia({audio:true});console.log('Microphone access granted');// Start with welcome message\nsetTimeout(async()=>{await speak(\"Good day, Sir. I am Friday, your personal assistant. How may I be of service today?\");// Start listening after welcome message\nsetTimeout(()=>{startListening();},1000);},1500);}catch(error){console.error('Microphone access denied:',error);setStatusText('Please allow microphone access and refresh the page');}};initializeVoice();},[speak,startListening]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"app-header\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"app-title\",children:\"Friday\"})}),/*#__PURE__*/_jsxs(\"main\",{className:\"app-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sound-wave-container\",children:/*#__PURE__*/_jsx(SoundWave,{state:status})}),/*#__PURE__*/_jsx(\"div\",{className:\"status-text\",children:statusText})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"app-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Friday is always listening - just speak naturally\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","SoundWave","useSpeechRecognition","useSpeechSynthesis","jsx","_jsx","jsxs","_jsxs","App","status","setStatus","statusText","setStatusText","speak","isSpeaking","startListening","stopListening","isListening","onResult","handleSpeechResult","onInterim","handleInterimResult","isProcessing","setIsProcessing","currentState","transcript","concat","console","log","response","fetch","method","headers","body","JSON","stringify","message","data","json","ok","Error","error","setTimeout","initializeVoice","navigator","mediaDevices","getUserMedia","audio","className","children","state"],"sources":["/Users/nakai/Documents/apps/friday_jarvis/monday_backend/react_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport SoundWave from './components/SoundWave';\nimport { useSpeechRecognition } from './hooks/useSpeechRecognition';\nimport { useSpeechSynthesis } from './hooks/useSpeechSynthesis';\n\nfunction App() {\n  const [status, setStatus] = useState('idle');\n  const [statusText, setStatusText] = useState('Listening...');\n  \n  const { speak, isSpeaking } = useSpeechSynthesis();\n  const { startListening, stopListening, isListening } = useSpeechRecognition({\n    onResult: handleSpeechResult,\n    onInterim: handleInterimResult\n  });\n\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Determine the current state for visual feedback\n  const currentState = isProcessing ? 'thinking' : \n                      isSpeaking ? 'speaking' : \n                      isListening ? 'listening' : 'idle';\n\n  useEffect(() => {\n    setStatus(currentState);\n    \n    switch (currentState) {\n      case 'idle':\n        setStatusText('Listening...');\n        break;\n      case 'listening':\n        setStatusText('Listening...');\n        break;\n      case 'thinking':\n        setStatusText('Friday is thinking...');\n        break;\n      case 'speaking':\n        setStatusText('Friday is speaking...');\n        break;\n      default:\n        setStatusText('Ready');\n    }\n  }, [currentState]);\n\n  function handleInterimResult(transcript) {\n    if (!isProcessing && !isSpeaking) {\n      setStatusText(`Listening: ${transcript}`);\n    }\n  }\n\n  async function handleSpeechResult(transcript) {\n    if (isProcessing || isSpeaking) return;\n    \n    setIsProcessing(true);\n    stopListening();\n    setStatusText(`Heard: ${transcript}`);\n    \n    try {\n      console.log('Sending to Friday:', transcript);\n      \n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: transcript }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        await speak(data.response);\n      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }\n    } catch (error) {\n      console.error('Error communicating with Friday:', error);\n      await speak('Apologies, Sir, but I encountered a technical difficulty.');\n    } finally {\n      setIsProcessing(false);\n      // Restart listening after a brief delay\n      setTimeout(() => {\n        startListening();\n      }, 1000);\n    }\n  }\n\n  // Start listening on component mount\n  useEffect(() => {\n    const initializeVoice = async () => {\n      try {\n        // Request microphone permission\n        await navigator.mediaDevices.getUserMedia({ audio: true });\n        console.log('Microphone access granted');\n        \n        // Start with welcome message\n        setTimeout(async () => {\n          await speak(\"Good day, Sir. I am Friday, your personal assistant. How may I be of service today?\");\n          // Start listening after welcome message\n          setTimeout(() => {\n            startListening();\n          }, 1000);\n        }, 1500);\n        \n      } catch (error) {\n        console.error('Microphone access denied:', error);\n        setStatusText('Please allow microphone access and refresh the page');\n      }\n    };\n\n    initializeVoice();\n  }, [speak, startListening]);\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1 className=\"app-title\">Friday</h1>\n      </header>\n      \n      <main className=\"app-main\">\n        <div className=\"sound-wave-container\">\n          <SoundWave state={status} />\n        </div>\n        \n        <div className=\"status-text\">{statusText}</div>\n      </main>\n      \n      <footer className=\"app-footer\">\n        <p>Friday is always listening - just speak naturally</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}